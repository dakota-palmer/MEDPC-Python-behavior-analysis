\ ICSS Experiment
\ Adapted from Jocelyn's/Ben's dopamine ICSS code.
\ Every active nosepoke gives 1 sec cue light, and 1 sec stimulation (20 Hz)
\ edited by CC 3/12/19 to adjust inputs and outputs for nosepokes
\edited by CC 3/20/19 to change active nosepoke on right side.

\ Inputs
\^nosepoke = 9     \Inactive nose poke is on left side.
\^sust_np = 10

\^inac_np = 11    \Active nose poke is on right side.
\^sust_inac = 12


\ Inputs
^nosepoke = 9    \Inactive nose poke is on left side.
^sust_np = 10

^inac_np = 11    \Active nose poke is on right side.
^sust_inac = 12



\ Outputs
^laser = 33
^hselight = 7

\^whitenoise =     \not in use in this program
\^tone =         \not in use in this program
\^fan =       \not in use in this program

\active nose poke lights--left side
\^np_lite1 = 20 \red
\^np_lite2 = 21 \green
\^np_lite3 = 22 \yellow

\inactive nose poke lights --right side
\^np_lite4 = 17 \red
\^np_lite5 = 18 \green
\^np_lite6 = 19 \yellow

\active nose poke lights--left side
^np_lite1 = 17 \red
^np_lite2 = 18 \green
^np_lite3 = 19 \yellow

\inactive nose poke lights --right side
^np_lite4 = 20 \red
^np_lite5 = 21 \green
^np_lite6 = 22 \yellow

\ Defined variables

\ T = time
\ L = session length


\ Arrays

DIM A = 20000    \ active np timestamps
DIM B = 400    \ inactive np timestamps
DIM C = 10000    \ stimulation timestamps

DIM D = 200     \ cumulative active nosepokes (1 min increments)
DIM E = 200    \ cumulative inactive nosepokes (1 min increments)

DIM F = 75     \ cumulative active nosepokes (5 min increments)
DIM G = 75     \ cumulative inactive nosepokes (5 min increments)

DIM N = 4
\ N(0) = number of active nosepokes
\ N(1) = number of inactive nosepokes
\ N(2) = total length of active nosepokes (session)
\ N(3) = total length of inactive nosepokes (session)
\ N(4) = total stimulation presentations

DIM X = 7
\ X(0) = length of cue light
\ X(1) = counter 1 for active np length
\ X(2) = counter 2 for active np length
\ X(4) = counter 1 for inactive np length
\ X(5) = counter 2 for inactive np length
\ X(6) = counter for arrays D and E
\ X(7) = counter for arrays F and G


\ show commands
\ 1 = active np
\ 2 = inac np
\ 3 = stim
\ 5 = clock

DISKCOLUMNS = 1

S.S.1,    \ Active nose poke: delivers stimulation and turns on cue light
S1,
   #start: SET X(0) = 1"; ON ^Laser---> S2

S2,
   #R^nosepoke: off ^laser; SET C(N(4)) = T; ADD N(4); SHOW 3, stim, N(4);
          ON ^np_lite1, ^np_lite2, ^np_lite3 ---> S3
S3,
    X(0)#T:  off ^np_lite1, ^np_lite2, ^np_lite3; on ^laser ---> S2



S.S.10,    \ Inactive nose poke: no stimulation but turns on cue light
S1,
    #start: ---> S2
S2,
    #R^inac_np: on ^np_lite4; on^np_lite5; on ^np_lite6 ---> S3
S3,
    X(0)#T: off ^np_lite4; off ^np_lite5; off ^np_lite6 ---> S2


S.S.2,    \ counts active/inactive nosepokes
S1,
    #start: ---> S2
S2,
    #R^nosepoke:  SET A(N(0)) = T; ADD N(0); SHOW 1, active np, N(0) ---> S2
    #R^inac_np: SET B(N(1)) = T; ADD N(1); SHOW 2, inac np, N(1) ---> S2


S.S.3,    \ counts CUMULATIVE length of active nosepokes
S1,
    #start: ---> S2
S2,
    #R^sust_np: SET X(1) = 1; ADD X(2) ---> S2
    0.01": IF X(1) = 1 [@NP, @no_NP]
           @NP: SET N(2) = (N(2)+ (X(2)/100));
                SET X(1) = 0; SET X(2) = 0 ---> S2
           @no_NP: ---> S2



S.S.4,    \ counts CUMULATIVE length of inactive nosepokes
S1,
    #start: ---> S2
S2,
    #R^sust_inac:  SET X(4) = 1; ADD X(5) ---> S2
    0.01": IF X(4) = 1 [@NP, @no_NP]
           @NP: SET N(3) = (N(3)+ (X(5)/100));
                SET X(4) = 0; SET X(5) = 0 ---> S2
           @no_NP: ---> S2



S.S.5,    \ session timer
S1,
    #start: ---> S2
S2,
    0.01": SET T = T + 0.01 ---> SX



S.S.6,    \ on screen clock
S1,
    #start: ---> S2
S2,
    1": SHOW 5, clock, T ---> SX



S.S.7,    \ counts nosepokes in 1 min increments
S1,
    #start: ---> S2
S2,
    1': SET D(X(6)) = N(0); SET E(X(6)) = N(1); ADD X(6) ---> S2



S.S.8,    \ counts nosepokes in 5 min increments
S1,
    #start: ---> S2
S2,
    5': SET F(X(7)) = N(0); SET G(X(7)) = N(1); ADD X(7) ---> S2



S.S.9,    \ ends session
S1,
    #start: on ^hselight; SET L = 60' ---> S3
S3,
    L#T: on 40 ---> S4
S4,
    1": off 40; off ^hselight;
           SET A(N(0)) = -987.987;
           SET B(N(1)) = -987.987;
           SET C(N(4)) = -987.987;
           SET D(X(6)) = -987.987;
           SET E(X(6)) = -987.987;
           SET F(X(7)) = -987.987;
           SET G(X(7)) = -987.987 ---> stopabortflush




