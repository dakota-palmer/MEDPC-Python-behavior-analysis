\Instrumental to Instrumental Transfer- Siren DS
\In this code, the DS will trigger a white noise. The NS will trigger a siren noise. Rewards will be delivered in Port1 by Pump1. Pump duration increased to 2 sec.
\based on white noise DS code*

\** In this version, first trial of each cue will ALWAYS be a laser ON trial

\Lasers will be triggered paired with cue onset
\cue lights accompany DS, NS, and laser durations

\CONSTANTS
\^leftLever = 1
\^rightLever = 2
\^leftStimLight = 4
\^rightStimLight = 5
^DSTone = 6
^DSTone2 = 23
^NSwhiteNoise = 8
^Boxlight = 28
^Pump = 9
^Houselight = 7
^ActiveLP = 1 \Left Lever Press, Active Lever
^InactiveLP = 3 \ Right Lever Press, Inactive Lever

^yellowLight = 25 \Laser delivery
^greenLight = 26 \DS
^redLight = 27 \NS

^Laser = 33


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\Sound stuff from Jocelyn's old code\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\Sound frequencies and other parameters
DIM R=8 \soundParams
     ^ToneDur=10000         \R(0) Length of tone's on time, in ms
     ^ToneFreq=2600         \R(1) freq of tone
     ^SirenBaseFreq=6000    \R(2) starting (low) freq of the siren (Hz)
     ^SirenMaxFreq=8000     \R(3) ending (high) freq of the siren (Hz)
     ^SirenStepFreq=200     \R(4) Amount by which to increase or decrease the frequency every 10 ms
     ^RFTime=1              \R(5) rise time in ms
     ^Amplitude=85          \R(6) amplitude (dB) of tones (note this is not actual amplitude;
                            \95 dB corresponds to ~85 dB @ 4 kHz on the box floor)
                            \R(7) is the current freq of siren
     ^SirenAmp=93           \R(8) is siren amplitude




\INPUTS
^PortEntry = 6
^TransientPE =5
^Lick = 7
^leftLeverPress = 1
^rightLeverPress = 3

\OUTPUTS
^ActiveLevExt = 1 \Extends active lever, left
^InactiveLevExt = 3 \Extends inactive lever, right


\ Inter-trial intervals in  seconds, average of about 90 seconds with pre and post cue periods
LIST J= 25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100 \ITI

\ Choose DS or NS for each trial
LIST Y = 0,0,0,0,1,1,1,1 \listCueType

\ Choose Laser ON or OFF for each DS trial   \OFF= 0  and ON = 1
LIST C = 0,0,0,0,0,1,1,1,1,1  \listProbDSLaser

\ Choose Laser ON or OFF for each NS trial   \OFF= 0  and ON = 1
LIST T = 0,0,0,0,0,1,1,1,1,1 \listProbNSLaser

Var_Alias Startup Delay (Sec)                 = A(0)
Var_Alias Number of trials                    = A(1)
Var_Alias DS duration                         = A(2)
Var_Alias Pump Delay (Sec)                    = A(3)  \ Not used in this program
Var_Alias Pump duration (Sec)                 = A(4)
Var_Alias Paired (0), or Unpaired (1) DS-US   = A(5)



DIM A=9 \stageParams
    \A(0)=Delay before 1st ITI in seconds (default 120 sec)
    \A(1)=Number of DS trials (default 60)
    \A(2)=Duration of DS phase in seconds (default 10 sec)
    \A(3)=Delay between CS+ ON and US ON for paired
    \A(4)=Pump duration in sec (default 5 sec)
    \A(5)=0 if paired DS-US, 1 if unpaired



\WORKING VARIABLES
DIM B=81 \workingVars
    \B(0) = 1" in MED time units, used for time input calculations
    \B(1) = Current trial #
    \B(2) = Current ITI length in seconds
    \B(3) = Current phase of trial, where 1=preDS 2=DS 3=postDSPlus 0=ITI 4=NS 5=postNS
    \B(4) = Box number of control box
    \B(5) = Reward count

    \B(6) = Total PEs
    \B(7) = PEs in ITI
    \B(8) = PEs in preDS
    \B(9) = PEs in DS
    \B(10)= PEs in postDS
    \B(11)= PEs in NS
    \B(12)= PEs in postNS

    \B(13)= Event timer in .01" units
    \B(14)= Current trial DS (1) versus NS (0)
    \B(15)= Program version number
    \B(16)= Elapsed seconds in current context
    \B(17)= Number of DS
    \B(18)= Number of NS
    \B(19)= Onset time of most recent cue
    \B(20)= Onset time of most recent cue-induced port entry & licking

    \B(21)= Number of DS trials with a port entry
    \B(22)= Number of NS trials with a port entry
    \B(23)= DS with PE to Number of DS Ratio
    \B(24)= NS with PE to Number of NS Ratio
    \B(25)= DS PE Mean Latency
    \B(26)= NS PE Mean Latency
    \B(27)= Not in use in this program
    \B(28)= Not in use in this program
    \B(29)= Total Time in Port
    \B(30)= Port Time in ITI
    \B(31)= Port Time in Pre DS/NS
    \B(32)= Port Time in DS
    \B(33)= Port Time in Post DS
    \B(34)= Port Time in NS
    \B(35)= Port Time in Post NS

    \B(36)= Total Licks
    \B(37)= Licks in ITI
    \B(38)= Licks in Pre DS/NS
    \B(39)= Licks in DS
    \B(40)= Licks in Post DS
    \B(41)= Licks in NS
    \B(42)= Licks in Post NS
    \B(43)= Number of DS trials with licks
    \B(44)= Number of NS trials with licks
    \B(45)= DS with Licks to Number of DS Ratio
    \B(46)= NS with Licks to Number of NS Ratio
    \B(47)= Licks in 5 sec post DS port entry

    \B(48)= Licks in 5 sec post NS port entry
    \ cumulative LPs
    \ B(49) = number of active LPs
    \ B(50) = number of inactive LPs

    \Period LPs
    \ B(51)=Pre DS ActiveLP
    \ B(52)=Pre DS InactiveLP
    \ B(53)=Post DS ActiveLP
    \ B(54)=Post DS InactiveLP
    \ B(55)=During DS ActiveLP
    \ B(56)=During DS InactiveLP
    \ B(57)=Pre NS ActiveLP
    \ B(58)=Pre NS InactiveLP
    \ B(59)=Post NS ActiveLP
    \ B(60)=Post NS InactiveLP
    \ B(61)=During NS ActiveLP
    \ B(62)=During NS InactiveLP
    \ B(63)=Pre NS PE

    \opto laser
    \B(64) = Current trial Laser OFF (0) or Laser ON (1)
    \B(65)= Total Laser onsets


\DATA ARRAYS
DIM H=61   \DStime \ DS onset time per trial
DIM I=61   \NStime \ NS onset time per trial

DIM Q=61   \UStime \ US onset time per trial

DIM K=9999 \PEtime \ PE timestamps in sec
DIM L=9999 \PEdur \ PE durations in sec
DIM M=30   \DSpelat \ Latency to PE following DS per trial
DIM N=31   \NSPElat \ Latency to PE following NS per trial
DIM O=31   \DSPE1 \ Time of first PE following DS
DIM P=31   \NSPE1 \ Time of first PE following NS
DIM S=9999 \lickTime \ LickTimestamps in sec
DIM V=31   \lickDSpost \ 5-sec Licks after first PE following DS
DIM U=31   \lickNSpost \ 5-sec Licks after first PE following NS

DIM W = 1000   \activeLPtime \ active lp timestamps
DIM X = 500    \inactiveLPtime \ inactive lp timestamps

DIM D= 9999 \laserTime \Laser ON timestamps
DIM G= 9999 \laserOffTime \laser OFF times

DIM E= 61 \laserDStrial \DS Laser trial array
DIM F= 61 \laserNStrial \NS Laser trial array




\Z signals (within box):
    \Z1 = Start initial delay
    \Z2 = Start DS
    \Z3 = Start US (possibly with delay)
    \Z4 = Start new trial (pre-DS)
    \Z5 = Start delay before session
    \Z6 = Start NS
    \Z9 = End of last trial
    \Z10 = Test Complete
    \Z11 = Signal that 5" has passed since first PE after DS
    \Z12 = Siren on
    \Z13 = Siren off

    \Z14= Laser was ON
    \Z15= Laser was OFF


\K signals (across all boxes):
\K1-K16= Used to report loaded boxes and choose lowest-numbered one as control
\K21 = Start 1st half of ITI
\K22 = Start 2nd half of ITI
\K23 = Start pre-DS period
\K24 = Start DS period
\K25 = Start post-DS period
\K26 = Start NS period
\K27 = Start post-NS period
\K28 = Start pre-NS period

\K29= Laser ON


S.S.1, \ Session clock in .01" units
S1,
  #K21:--->S2 \ K21= Start first half of ITI

S2,
  .01": ADD B(13)--->SX \ B(13)= Event timer in .01" units; milliseconds



S.S.2, \ Test the boxes
S1,
   .1": SHOW 1, Test, A(1);
       SET R(0)= ^ToneDur;
       SET R(1)= ^ToneFreq;
       SET R(2)= ^SirenBaseFreq;
       SET R(3)= ^SirenMaxFreq;
       SET R(4)= ^SirenStepFreq;
       SET R(5)= ^RFTime;
       SET R(6)= ^Amplitude;
       SET R(7)= 0;
       SET R(8)= ^SirenAmp;
       ~SetRack(MG,3);~; \Set Rack to 3
       ~InitANL926RP(MG,3,790);~; \ Reset ANL-926
       ~SetRF(MG, BOX, R[5]);~;
       ON ^HouseLight--->S2
S2,
  #R^PortEntry: Z12;~setFreq(MG,BOX,R[1]);~; ~setDur(MG,BOX,R[0]);~; ~onAmp(MG, BOX, R[6]);~; --->S3
S3,
   2": Z13; on ^NSWhiteNoise ---> S4
S4,
   2": OFF ^HouseLight, ^NSWhiteNoise, ^Pump--->S5
S5,
  .1": SHOW 1, Ready,A(1); Z10--->S6
S6,
   5':--->SX



S.S.3, \ Initialization and trial control for all boxes. DS duration is 60 seconds.
S1, \Initialize variables
  .01": SET A(5)=0;   \This value specifies the protocol: 0 for paired DS-US or 1 for unpaired
        SET A(0)=300, A(1)=16, A(2)=30, A(3)=10, A(4)=4;\A(1)= # of trials- doing 8 of each cue ( DS,NS) .... A(2)= length of cue...A(0)= 5 minute extinction delay
        SET B(0)=1";
        SET H(1)=-987.987, I(1)=-987.987, Q(1)=-987.987, K(1)=-987.987, L(1)=-987.987--->SX
  #Z10:--->S2

S2, \Let all boxes know this box is loaded, to select unique control box in S.S.3
  #START: KBOX;ON ^Houselight, ^ActiveLevExt, ^InactiveLevExt--->S3   \ie, send K1 if this is box 1, K2 if box 2, etc.
  #Z5:--->S3

S3, \Begin initial ITI
  #K21: --->S6

S4, \Begin 1st half of regular ITI
  #K21: SET B(3)=0--->S5

S5, \Begin 2nd half of regular ITI, and US if unpaired
  #K22: IF A(5)=1 [@T2,@F2] \A(5)=0 from S.S.2
          @T2: Z3--->S6
          @F2:--->S6

S6, \Begin Pre-DS or NS, unless all trials have run and session is over
  #K23: SET B(3)=1;
        IF B(1) < A(1) [@T3,@F3]
          @T3: ADD B(1); SET I(B(1))=0, I(B(1)+1)=-987.987;
               SET Q(B(1))=0, Q(B(1)+1)=-987.987; Z4--->S7
          @F3: OFF ^Houselight; Z9--->S9
 #K28: SET B(3)=1;
        IF B(1) < A(1) [@T3,@F3]
          @T3: ADD B(1); SET I(B(1))=0, I(B(1)+1)=-987.987;
               SET Q(B(1))=0, Q(B(1)+1)=-987.987; Z4--->S7
          @F3: OFF ^Houselight; Z9--->S9
          \Is the current trial # is < the set number of trials?
          \If false, then end the session ---> S9

S7, \Begin DS, and also US (after delay) if paired
  #K24: SET B(3)=2; Z2;
        IF A(5)=0 [@T4,@F4]
          @T4: Z3--->S8
          @F4:--->S8
  #K26: SET B(3)=4; Z6 ---> S8

S8, \Begin Post-DS
  #K25: ---> S4
  #K27: ---> S4

S9, \A couple of extra seconds to update display, then quit
  2":--->STOPABORTFLUSH



S.S.4, \ Trial and ITI timing, mainly for the control box
S1, \Let the lowest-numbered running box (starting with 1) assume control
  #K1:  Z5; SET B(4)= 1--->S2
  #K2:  Z5; SET B(4)= 2--->S2
  #K3:  Z5; SET B(4)= 3--->S2
  #K4:  Z5; SET B(4)= 4--->S2
  #K5:  Z5; SET B(4)= 5--->S2
  #K6:  Z5; SET B(4)= 6--->S2
  #K7:  Z5; SET B(4)= 7--->S2
  #K8:  Z5; SET B(4)= 8--->S2
  #K9:  Z5; SET B(4)= 9--->S2
  #K10: Z5; SET B(4)=10--->S2
  #K11: Z5; SET B(4)=11--->S2
  #K12: Z5; SET B(4)=12--->S2

S2, \Pre-session delay, then check if this is the control box
  A(0)*B(0)#T: IF B(4)=BOX [@T1,@F1]  \If control, choose 1st ITI and proceed
                 @T1: K21; RANDD B(2)=J--->S3
                 @F1:--->S16           \Non-control: Go into passive state

S3, \Pick NS or DS
   .1": RANDD B(14)=Y--->S4

S4, \Signal end of 1st half of ITI to all boxes, in case this is unpaired protocol

  (B(2)/2)*B(0)#T: K22--->S6

S6, \Signal end of 2nd half of ITI to all boxes
  (B(2)/2)*B(0)#T: IF B(14)=0 [@T3,@F3]
          @T3: K28--->S7 \NS start PRE
          @F3: K23--->S7   \DS Start PRE

S7, \Trigger NS or DS
   .1": IF B(14)=0 [@T3,@F3]
          @T3: --->S11    \NS trigger
          @F3: --->S15   \DS Trigger

S15, \Choose Laser or No Laser for DS
    .1": RANDD B(64)=C--->S8

S8, \Signal end of Pre-DS interval to all boxes, 15 seconds pre
  15": IF B(17)=0 [@T2, @F2] \if this is first DS trial
    @T2: SET B(64)=0; K24; --->S9 \if this is the first DS trial, make sure the laser not triggered

    @F2: IF B(64)=0 [@T1, @F1] \for all other trials, check b(64) and proceed accordingly
            @T1:K24--->S9 \after pre-cue delay, send K24 pulse to initate DS trial in all boxes
            @F1:K24; K29--->S9 \If Laser on trial, also send K29 to signal laser ON


S9, \Signal end of DS interval to all boxes
  A(2)*B(0)#T: K25--->S10

S10, \Signal end of post-DS interval to all boxes, choose next ITI, 15 seconds post DS
  15": K21; RANDD B(2)=J--->S3

S16, \Choose Laser or No Laser for NS
.1": RANDD B(50)=T--->S11

S11, \Signal end of Pre-NS interval to all boxes, trigger NS laser
  15": IF B(18)=0 [@T2, @F2] \ if this is the first NS trial, make sure the laser not triggered
        @T2: SET B(64)=0; K26; --->S9 \if this is the first NS trial, make sure the laser not triggered

        @F2: IF B(64)=0 [@T1, @F1] \for all other trials, check b(64) and proceed accordingly
            @T1:K26--->S9 \after pre-cue delay, send K26 pulse to initate NS trial in all boxes
            @F1:K26; K29--->S9 \If Laser on trial, also send K29 to signal laser ON

S12, \Signal end of NS interval to all boxes
  A(2)*B(0)#T: K27--->S13

S13, \Signal end of post-NS interval to all boxes, choose next ITI
  15": K21; RANDD B(2)=J--->S3

S14, \Passive state for non-control boxes
  60':--->SX

S.S.30, \ DS Laser Array
S1,
    #K24:--->S2
S2,
    #Z14: SET E(B(17))=1; SET E(B(17)+1)=-987.987--->S1
    1": SET E(B(17))=0; SET E(B(17)+1)=-987.987--->S1


S.S.31, \ NS Laser Array
S1,
    #K26:--->S2
S2,
    #Z14: SET F(B(18))=1; SET F(B(18)+1)=-987.987--->S1
    1": SET F(B(18))=0; SET F(B(18)+1)=-987.987--->S1

S.S.32, \ Laser stimulation start and stop
\Alternating 5s laser ON, 5s laser OFF \TODO: if you want to change these laser parameters you should probably a variable
\Making a PE will NOT cease laser (unlike opto DS cue manipulation stages)
S1,
    .1": ON ^Laser--->S2 \Laser TTL for Pulse Pal is inverted (TTL offset triggers Laser), so ON^Laser turns the lasers off by default until a K29 signal is sent for OFF^Laser to turn the lasers on
S2,
    #K29: OFF ^Laser; Z14; ON ^yellowLight; ADD B(65); SET D(B(65))=B(13)/100, D(B(65)+1)=-987.987--->S3 \turn on laser and yellow light
S3, \after some delay cease laser, log laser off time
  \\  #R^PortEntry: ON ^Laser; OFF^yellowLight --->S2 \if there is a port entry detected, cease laser, turn off yellow light
    #K25: ON ^Laser; OFF^yellowLight; ON^Laser; OFF^yellowLight; SET G(B(65))=B(13)/100, G(B(65)+1)=-987.987--->S2 \Or if the cue duration ends do the same; dp changed this to K25, which signals DS trial end. Previously was K23 which would have been ITI end
    #K27: ON ^Laser; OFF^yellowLight; SET G(B(65))=B(13)/100, G(B(65)+1)=-987.987 --->S2 \also needs to accomodate NS trial end with K27 signal
    \Cease laser. off/on states throughout cue duration
    5": ON ^Laser; OFF^yellowLight; SET G(B(65))=B(13)/100, G(B(65)+1)=-987.987 --->S4
S4, \after some delay turn laser back on, log laser on time
    #K25: ON ^Laser; OFF^yellowLight; ON^Laser; OFF^yellowLight; SET G(B(65))=B(13)/100, G(B(65)+1)=-987.987--->S2 \Or if the cue duration ends do the same; dp changed this to K25, which signals DS trial end. Previously was K23 which would have been ITI end
    #K27: ON ^Laser; OFF^yellowLight; SET G(B(65))=B(13)/100, G(B(65)+1)=-987.987 --->S2 \also needs to accomodate NS trial end with K27 signal
    \Restart laser. alternate between off/on states throughout cue duration
    5": OFF^Laser; ON ^yellowLight; ADD B(65); SET D(B(65))=B(13)/100, D(B(65)+1)=-987.987--->S3 \after delay, turn on laser and yellow light, log on time



S.S.5, \ Siren control

S1,
  #Z12: set R(7) = R(2); ~setFreq(MG,BOX,R[2]);~; ~onAmp(MG, BOX, R[8]);~; --->S2  \Currently, Tone one is substituted. SET H(B(49))=B(13)/100
S2,
 .01":set R(7) = R(7) + ^SirenStepFreq; ~setFreq(MG,BOX,R[7]);~; ~onAmp(MG, BOX, R[8]);~; if R(7)>=^SirenMaxFreq [@GoDown, @Continue]
    @GoDown: --->s3
    @Continue: ---> s2
 #Z13: ~toneOff(MG, BOX);~ ---> S1
s3,
 .01":set R(7) = R(7) - ^SirenStepFreq; ~setFreq(MG,BOX,R[7]);~; ~onAmp(MG, BOX, R[8]);~; if R(7)<=^SirenBaseFreq [@GoUp, @Contin]
    @GoUp: --->s2
    @Contin: ---> s3
 #Z13: ~toneOff(MG, BOX);~; ---> S1



S.S.6, \ DS control
S1,
  #Z2: Z12; SET H(B(17))=B(13)/100; ON ^greenLight--->S2 \siren DS line
 \   #Z2: ON^NSwhiteNoise; SET H(B(17))=B(13)/100;  ON ^greenLight--->S2 \white noise DS line

S2,
  A(2)*B(0)#T: Z13; OFF ^greenLight ---> S1 siren DS
 \   A(2)*B(0)#T: OFF^NSwhiteNoise; OFF ^greenLight ---> S1 \wn ds



S.S.7, \ DS US control
S1,
  #Z3:--->S2

S2,
  A(2)*B(0)#T: SET B(3)=3 --->S1



S.S.8, \ NS control
S1,
  #Z6: ON ^NSwhiteNoise; SET I(B(18))=B(13)/100; ON ^redLight--->S2 \siren ds
\  #Z6: Z12; SET I(B(18))=B(13)/100;  ON ^redLight--->S2 \wn ds


S2,
  A(2)*B(0)#T: OFF ^NSwhiteNoise; OFF ^redLight--->S1 \siren ds
\ A(2)*B(0)#T: Z13;  OFF^redLight--->S1 \wn ds




S.S.9, \ Record PE times and durations
S1,
  #K21:--->S2

S2,
  #R^PortEntry: ADD B(6); \B(7+B(3));
                SET K(B(6))=B(13)/100, L(B(6))=0, K(B(6)+1)=-987.987, L(B(6)+1)=-987.987--->S3
  #Z9:--->S1

S3, \In this state, PE has occurred and duration is being recorded
  #R^PortEntry:--->S3
  #Z9 ! .01": SET L(B(6))=(B(13)-1)/100-K(B(6))--->S2

S.S.10, \ Latency to enter port after DS
S1,
  #Z2: --->S2

S2,
  A(2)*B(0)#T: SET M(B(17))=A(2), O(B(17))=0, B(3)=3; ADD B(17) --->S1
  #R^PortEntry: ADD B(21); SET O(B(17))=B(13)/100, B(3)=3  --->S3

S3,
  5": SET M(B(17))=O(B(17))-H(B(17)); ADD B(17); SET O(B(17)+1)=-987.987--->S1



S.S.11,  \ Latency to enter port after NS
S1,
  #Z6: --->S2

S2,
  A(2)*B(0)#T: SET N(B(18))=A(2); SET P(B(18))=0; ADD B(18)--->S1
  #R^PortEntry: ADD B(22); SET P(B(18))=B(13)/100--->S3

S3,
  5": SET N(B(18))=P(B(18))-I(B(18)); ADD B(18); SET B(3)=5, P(B(18)+1)=-987.987--->S1



S.S.12,  \ Calculates average latency for DS and NS port entries
S1,
   #K21: ARITHMETICMEAN B(25) = M,0,B(17); SHOW 11, DS PE Latency, B(25);
         ARITHMETICMEAN B(26) = N,0,B(18); SHOW 12, NS PE Latency, B(26)--->SX



\S.S.13, \ Records time spent in port in each window
\S1,
    \#K21:--->S2

\S2, \ Begin ITI period count of PE time
  \#R^PortEntry: ADD B(29); ADD B(30+B(3));
                  \SHOW 2, PEtime, B(29);
                 \ SHOW 3, PEtime2, B(30+B(3));
                  \SHOW 4, PEtime3, B(30);
                  \SHOW 5, PEtime4, B(3)--->S2 \dp added trying to debug

S.S.14,  \ DS Ratio
S1,
   #z2: --->S2

S2,
  A(2)*B(0)#T: --->S3
  #R^PortEntry: --->S3

S3,
  A(2)*B(0)#T: SET B(23)=B(21)/B(17)--->S1



S.S.15,  \ NS Ratio
S1,
   #z6:--->S2

S2,
  A(2)*B(0)#T: --->S3
  #R^PortEntry: --->S3

S3,
  10": SET B(24)=B(22)/B(18)--->S1



S.S.16, \ Counts the 5 seconds after the first post-DS port entry
s1,
  #Z2: ---> s2

s2,
  #R^PortEntry:--->s3

s3,
  5": z11 ---> s1



S.S.17, \ Counts the 5 seconds after the first post-NS port entry
s1,
  #Z6: ---> s2

s2,
  #R^PortEntry:--->s3

s3,
  5": z11 ---> s1



S.S.18, \ Record licks & lick timestamps
S1,
  #K21:--->S2

S2,
  #R^Lick: ADD B(36); ADD B(37+B(3));
           SET S(B(36))=B(13)/100, S(B(36)+1)=-987.987 ---> S2
           \ITI, PreCue, Cue, and PostCue
  #Z9:--->S1
  #Z2:--->S3
  #Z6:--->S5

S3, \Waits for post-DS port entry
  #R^PortEntry: ---> s4
  A(2)*B(0)#T: ---> s2

S4, \Counts licks for 5 sec post DS port entry
  #R^Lick: ADD B(36); ADD B(37+B(3)); ADD B(47); ADD V(B(17)); SET S(B(36))=B(13)/100, S(B(36)+1)=-987.987 ---> s4
  #z11: ---> s2

S5, \Waits for post-NS port entry
  #R^PortEntry: ---> s6
  A(2)*B(0)#T: ---> s2

S6, \Counts licks for 5 sec post NS port entry
  #R^Lick: ADD B(36); ADD B(37+B(3)); ADD B(48); ADD U(B(18)); SET S(B(36))=B(13)/100, S(B(36)+1)=-987.987 ---> s4
  #z11: ---> s2



S.S.19, \ DS Lick Ratio
S1,
   #z2: --->S2

S2,
  A(2)*B(0)#T: --->S3
  #R^Lick: ADD B(43)--->S3

S3,
  A(2)*B(0)#T: SET B(45)=B(43)/B(17)--->S1



S.S.20, \ NS Lick Ratio
S1,
   #z6:--->S2

S2,
  A(2)*B(0)#T: --->S3
  #R^Lick: ADD B(44)--->S3

S3,
  A(2)*B(0)#T: SET B(46)=B(44)/B(18)--->S1



S.S.21, \ Display of trial number, current state, and elapsed secs in current state
S1,
  #Z5: SHOW 1,Delay,B(16)--->S2

S2,
  #K21: SET B(16)=0;
        IF BOX=B(4) [@T1,@F1]
          @T1:~ShowCommand(MG,Box,1,'ITI '+IntToStr(Round(B[1])+1)+' ('+IntToStr(Round(B[2]))+')',B[12]);~--->S3
          @F1:~ShowCommand(MG,Box,1,'ITI '+IntToStr(Round(B[1])+1),B[12]);~--->S3
  1":   ADD B(16);
        SHOW 1,Delay,B(16)--->SX
  #Z9:--->S9

S3,
  #Z4: SET B(16)=0;
       ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' PRE',B[12]);~--->S4
  1":  ADD B(16);
       IF BOX=B(4) [@T2,@F2]
         @T2:~ShowCommand(MG,Box,1,'ITI '+IntToStr(Round(B[1])+1)+' ('+IntToStr(Round(B[2]))+')',B[12]);~--->SX
         @F2:~ShowCommand(MG,Box,1,'ITI '+IntToStr(Round(B[1])+1),B[12]);~--->SX
  #Z9:--->S9

S4,
  #K24: SET B(16)=0;
        ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' DS',B[12]);~--->S5
  #K26: SET B(16)=0;
        ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' NS',B[12]);~--->S5
 1":   ADD B(16);
        ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' PRE',B[12]);~--->SX
  #Z9:--->S9

S5,
  #K25: SET B(16)=0;
        ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' POSTDS',B[12]);~--->S6
  #K27: SET B(16)=0;
        ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' POSTNS',B[12]);~--->S6
   1":   ADD B(16);
        ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' DS',B[12]);~--->SX
  #Z9:--->S9

S6,
  #K21: SET B(16)=0;
       IF BOX=B(4) [@T3,@F3]
         @T3:~ShowCommand(MG,Box,1,'ITI '+IntToStr(Round(B[1])+1)+' ('+IntToStr(Round(B[2]))+')',B[12]);~--->S3
         @F3:~ShowCommand(MG,Box,1,'ITI '+IntToStr(Round(B[1])+1),B[12]);~--->S3
  1":   ADD B(16);
        ~ShowCommand(MG,Box,1,'TRL '+IntToStr(Round(B[1]))+' POST',B[12]);~--->SX
  #Z9:--->S9

S9,
  60':--->SX


S.S.23,    \ counts active/inactive LP
S1,
    #start: ---> S2
S2,
    #R^ActiveLP:  SET W(B(49)) = B(13)/100; ADD B(49)---> S2
    #R^InactiveLP: SET X(B(50)) = B(13)/100; ADD B(50) ---> S2


\DS CUE LEVER PRESS COUNTS and PE in pre, during and post cue
S.S.24,    \ counts active/inactive LP within cue period
S1,
    #K24: ---> S2
S2,
    #R^ActiveLP:   ADD B(55) ---> S2
    #R^InactiveLP: ADD B(56) ---> S2
    #R^TransientPE:  ADD B(9) ---> S2
    #K25:---> S1

S.S.25,    \ counts active/inactive LP pre cue period
S1,
    #K23: ---> S2
S2,
    #R^ActiveLP:  ADD B(51) ---> S2
    #R^InactiveLP:  ADD B(52) ---> S2
    #R^TransientPE:   ADD B(8) ---> S2
    #K24:---> S1

S.S.26,    \ counts active/inactive LP post cue period
S1,
    #K25: ---> S2
S2,
    #R^ActiveLP:   ADD B(53) ---> S2
    #R^InactiveLP:  ADD B(54) ---> S2
    #R^TransientPE:  ADD B(10) ---> S2
    #K21:---> S1


\NS CUE LEVER PRESS COUNTS
S.S.27,    \ counts active/inactive LP within cue period
S1,
    #K26: ---> S2
S2,
    #R^ActiveLP:   ADD B(61)---> S2
    #R^InactiveLP: ADD B(62) ---> S2
    #R^TransientPE:   ADD B(11) ---> S2
    #K27:---> S1

S.S.28,    \ counts active/inactive LP pre cue period
S1,
    #K28: ---> S2
S2,
    #R^ActiveLP:  ADD B(57) ---> S2
    #R^InactiveLP:  ADD B(58) ---> S2
    #R^TransientPE:   ADD B(63) ---> S2
    #K26:---> S1

S.S.29,    \ counts active/inactive LP post cue period
S1,
    #K27: ---> S2
S2,
    #R^ActiveLP:   ADD B(59) ---> S2
    #R^InactiveLP:  ADD B(60) ---> S2
    #R^TransientPE:   ADD B(12) ---> S2
    #K21:---> S1

 \Period LPs
    \ B(51)=Pre DS ActiveLP
    \ B(52)=Pre DS InactiveLP
    \ B(53)=Post DS ActiveLP
    \ B(54)=Post DS InactiveLP
    \ B(55)=During DS ActiveLP
    \ B(56)=During DS InactiveLP
    \ B(57)=Pre NS ActiveLP
    \ B(58)=Pre NS InactiveLP
    \ B(59)=Post NS ActiveLP
    \ B(60)=Post NS InactiveLP
    \ B(61)=During NS ActiveLP
    \ B(62)=During NS InactiveLP



    \B(8) = PEs in preDS
    \B(9) = PEs in DS
    \B(10)= PEs in postDS
    \B(63)= PEs in preNS
    \B(11)= PEs in NS
    \B(12)= PEs in postNS

S.S.22, \ Summary display of PE and Lick data
S1,
  #K21: SHOW 2,Pre DS ActiveLP,B(51),
    3,Pre DS InactiveLP,B(52),
    4,DS ActiveLP, B(55),
    5, DS InactiveLP, B(56),
    6,Post DS ActiveLP, B(53),
    7,Post DS InactiveLP, B(54),
    8,Pre NS ActiveLP,B(57),
    9,Pre NS InactiveLP,B(58),
    10,NS ActiveLP, B(61),
    11,NS InactiveLP, B(62),
    12,Post NS ActiveLP, B(59),
    13,Post NS InactiveLP, B(60),
    14, ActiveLP, B(49),
    15, InactiveLP, B(50),
    16, Total PE,B(6),
    17, Total Licks,B(36),
    18, DS PE Licks, B(47),
    19, DS PE Ratio, B(23),
    20, NS Licks,B(41),
    21, NS PE Ratio, B(24),
    22, DS PE Latency, B(25),
    23, NS PE Latency, B(26),
    24,Total PT,B(29),
    25,ITI PE, B(7),
    26,ITI PT,B(30),
    27,PreCue PE,B(8),
    28,PreCue PT,B(31),
    29,DS PE,B(9),
    30,DS PT,B(32),
    31,PostDS PE,B(10),
    32,PostDS PT,B(33),
    33,PreNS PE, B(63),
    34,NS PT,B(34),
    35,NS PE,B(11),
    36,PostNS PT,B(35),
    37,PostNS PE,B(12)--->S2


S2,
  1":  SHOW 2,Pre DS ActiveLP,B(51),
    3,Pre DS InactiveLP,B(52),
    4,DS ActiveLP, B(55),
    5, DS InactiveLP, B(56),
    6,Post DS ActiveLP, B(53),
    7,Post DS InactiveLP, B(54),
    8,Pre NS ActiveLP,B(57),
    9,Pre NS InactiveLP,B(58),
    10,NS ActiveLP, B(61),
    11,NS InactiveLP, B(62),
    12,Post NS ActiveLP, B(59),
    13,Post NS InactiveLP, B(60),
    14, ActiveLP, B(49),
    15, InactiveLP, B(50),
    16, Total PE,B(6),
    17, Total Licks,B(36),
    18, DS PE Licks, B(47),
    19, DS PE Ratio, B(23),
    20, NS Licks,B(41),
    21, NS PE Ratio, B(24),
    22, DS PE Latency, B(25),
    23, NS PE Latency, B(26),
    24,Total PT,B(29),
    25,ITI PE, B(7),
    26,ITI PT,B(30),
    27,PreDSCue PE,B(8),
    28,PreCue PT,B(31),
    29,DS PE,B(9),
    30,DS PT,B(32),
    31,PostDS PE,B(10),
    32,PostDS PT,B(33),
    33,PreNS PE, B(63),
    34,NS PT,B(34),
    35,NS PE,B(11),
    36,PostNS PT,B(35),
    37,PostNS PE,B(12)--->SX

