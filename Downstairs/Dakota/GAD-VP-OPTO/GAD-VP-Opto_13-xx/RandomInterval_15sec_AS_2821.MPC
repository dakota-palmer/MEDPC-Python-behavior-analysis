
\ Pavlovian conditioning experiment phase 3
\ Instrumental training for sucrose or alcohol (4 sec rew versus 1 sec rew)
\ edited by BTS to include 1 min counts for active/inactive lp
\ edited 3/27/15 by JMR to make purely instrumental


\ Inputs        \ Plexon
^ActiveLP = 1 \Left Lever Press, Active Lever
^InactiveLP = 3 \ Right Lever Press, Inactive Lever
^PortEntryTime = 6 \LEFT PORT ENTRY sustained
^PortEntry = 5  \LEFT PORT ENTRY response, reward port

^ActiveNosePoke = 6 \ Not used for instrumental training here
^InactiveNosePoke = 7 \ Not used for instrumental training here



\ Outputs
^ActiveLevExt = 1 \Extends active lever, left
^InactiveLevExt = 3 \Extends inactive lever, right
^hselight = 7
^pump = 9 \ Syringe pump 2
^whitenoise = 8 \ CS PLUS not used in this phase
^tone = 6 \ CS MINUS not used in this phase

\ Inter-trial intervals in seconds
LIST Q = 5", 6",7" , 8", 9", 10", 11",12", 13", 14", 15", 16", 17", 18", 19",20",21",22",23",24",25"  \ Inter-trial intervals in seconds - average ITI is 15 seconds


\ Defined variables

\ T = time
\ L = session length
\ P = random interval length

\ Arrays

DIM A = 1000    \ active lp timestamps
DIM B = 500    \ inactive lp timestamps
DIM C = 1000    \ reward timestamps
DIM I = 1000    \ Port Entry Timestamps


DIM D = 50     \ cumulative active LPs (1 min increments)
DIM E = 50    \ cumulative inactive LPs (1 min increments)
DIM J = 50    \ cumulative port entries (1 min increments)
DIM H = 50     \ cumulative port entry time (1 min increments)

DIM F = 10     \ cumulative active LPs (5 min increments)
DIM G = 10     \ cumulative inactive LPs (5 min increments)
DIM K = 10     \ cumulative port entries (5 min increments)
DIM M = 10     \ cumulative port entry time (5 min increments)

DIM N = 6
\ N(0) = number of active LPs
\ N(1) = number of inactive LPs
\ N(2) = total length of port entries
\ N(3) = total PE time
\ N(4) = total rewards
\ N(5) = total CS Minus Presentations
\ N(6) = total PEs

DIM X = 7
\ X(0) = length of cue light
\ X(1) = counter for arrays D and E and J and H
\ X(2) = counter for arrays F and G and K and M


\ show commands
\ 1 = active lps
\ 2 = inactive lps
\ 3 = rewards
\ 4 = port entries
\ 5 = clock
\ 6 = port entry time

DISKCOLUMNS = 1



S.S.1,    \ instrumental schedule
S1,
    #start: SET X(0) = 4" ---> S2

S2,
    0.01": RANDD P = Q; SHOW 7, RandomInterval(ms),P ---> S3 \ wait 10 ms then choose new interval

S3,
 P#T: ---> S4

S4,
   #R^ActiveLP: on ^pump; SET C(N(4)) = T; ADD N(4); SHOW 3, Rewards, N(4) ---> S5

S5,
    X(0)#T:  off ^pump;  IF N(4)=20 [@T1,@F1]\if given 20 rewards- stop program with z signal
                @T1: Z1--->SX
                @F1: --->S2


S.S.2,    \ counts active/inactive LP
S1,
    #start: ---> S2
S2,
    #R^ActiveLP:  SET A(N(0)) = T; ADD N(0); SHOW 1, Active LP, N(0) ---> S2
    #R^InactiveLP: SET B(N(1)) = T; ADD N(1); SHOW 2, Inactive LP, N(1) ---> S2
    #R^PortEntry: SET I(N(6)) = T; ADD N(6); SHOW 4, Port Entries, N(6) ---> S2
    #R^PortEntryTime: ADD N(3); SHOW 6, Time in Port, N(3) ---> S2


S.S.5,    \ session timer
S1,
    #start: ---> S2
S2,
    0.01": SET T = T + 0.01 ---> SX



S.S.6,    \ on screen clock
S1,
    #start: ---> S2
S2,
    1": SHOW 5, clock, T ---> SX



S.S.7,    \ counts LPs and port entries in 1 min increments
S1,
    #start: ---> S2
S2,
    1': SET D(X(1)) = N(0); SET E(X(1)) = N(1); SET J(X(1)) = N(6); SET H(X(1)) = N(3); ADD X(1) ---> S2



S.S.8,    \ counts LPs and port entries in 5 min increments
S1,
    #start: ---> S2
S2,
    5': SET F(X(2)) = N(0); SET G(X(2)) = N(1); SET K(X(2)) = N(6); SET M(X(2)) = N(3); ADD X(2) ---> S2


S.S.9,    \ ends session
S1,
    #start: ON ^hseLight, ^ActiveLevExt, ^InactiveLevExt; SET L = 30' ---> S3
S3,
    #Z1:---> S4 \if recieve 20 rewards stop
    L#T: on 40 ---> S4
S4,
    1": off 40; off ^hselight, ^ActiveLevExt, ^InactiveLevExt;
           SET A(N(0)) = -987.987;
           SET B(N(1)) = -987.987;
           SET C(N(4)) = -987.987;
           SET I(N(6)) = -987.987;
           SET D(X(1)) = -987.987;
           SET E(X(1)) = -987.987;
           SET J(X(1)) = -987.987;
           SET F(X(2)) = -987.987;
           SET G(X(2)) = -987.987;
       SET K(X(2)) = -987.987;
           SET M(X(2)) = -987.987;
           SET H(X(1)) = -987.987; ---> stopabortflush



